// PRICECARD variables
// these variables should link to a setting variable. Only PRICECARD variables should be used inside the PRICECARD
// --------------------------------------------------
$c-priceCard-toggle-BP: map-get($f-breakpoints , 'xs' );
$c-priceCard__colors: (
	'gratis': s-map-deep-get($f-colors, 'material','fuchsia' ),
    'basica': s-map-deep-get($f-colors, 'material','blue' ),
    'plus': s-map-deep-get($f-colors, 'material','teal' ),
    'completa': s-map-deep-get($f-colors, 'material','orange' ),
	);
$c-priceCard__iconSize: map-get($f-modspaces , 'large' );
$c-priceCard__transition: all $f-global-transition;
$c-priceCard__border-radius: 6px;
$c-priceCard__border-color: s-map-deep-get($f-colors, 'neutral', 'grey');
$c-priceCard__paddingV: map-get($f-modspaces, 'small' );
$c-priceCard__paddingH: map-get($f-modspaces, 'tiny' );
$c-priceCard__paddingB: map-get($f-modspaces, 'medium' );
$c-priceCard__title-typeScale: map-get($sc-type-scale , 'sc-1' );
$c-priceCard__price-typeScale: map-get($sc-type-scale , 'sc-3' );
$c-priceCard__features-typeScale: map-get($sc-type-scale , 'default' );


// PRICECARD toggling
$c-priceCard--enabled: false !default;

// PRICECARD and parts as a mixins
// --------------------------------------------------
@mixin c-priceList() {
	align-items: center;
	flex-direction: column;
	flex-wrap: wrap;
	justify-content: space-around;

// padding: 2rem;//leave space in the bottom for the shadow to appear

	min-width: 100%;

	&#{&} {
		overflow: visible;
	}
	@media screen and (min-width:$c-priceCard-toggle-BP) {
		align-items: stretch;
		flex-direction: row;
	}
}
@mixin c-priceCard() {
	overflow: hidden;

	width: 100%;
	min-width: 80%;
	max-width: 100%;
	margin-bottom: $c-priceCard__paddingV;

	transition: $c-priceCard__transition;
	text-align: center;
	text-align: center;

	border: 1px solid $c-priceCard__border-color;
	border-bottom: 3px solid var(--myColor, transparent);
	border-top-left-radius: $c-priceCard__border-radius;
	border-top-right-radius: $c-priceCard__border-radius;
	box-shadow: 0 0 2px rgba(0,0,0,.5);
	box-shadow: s-map-deep-get($f-shadows, 'btn','normal','s1') rgba($f-shadow-color, .1),
	s-map-deep-get($f-shadows, 'btn','normal','s2') rgba($f-shadow-color, .3);
	&#{&}#{&} {
		padding: 0;
	}
	@media screen and (min-width:400px) {
		width: 100%;
		min-width: 50%;
		// max-width: 50%;
	}
	@media screen and (min-width:$c-priceCard-toggle-BP) {
		flex: 1;
		flex-basis: 215px;

		min-width: auto;

// max-width: 300px;
		margin-right: $c-priceCard__paddingV;

		&:last-child {
			margin-right: 0;
		}
	}

	&:hover,
	&:focus {
		@include c-card--highlighted ();
	}
	button {
		display: block;

		margin-right: auto;
		margin-left: auto;
	}
}
@mixin c-card--highlighted () {
	border-color: var(--myColor);
	box-shadow: s-map-deep-get($f-shadows, 'elevated') rgba($f-shadow-color, .3);
	.c-priceCard__price:before {
		transform: translateY(100%);
	}
}
@mixin c-priceCard__header () {
	padding: $c-priceCard__paddingV $c-priceCard__paddingH ;

	color: white;
	background-color: var(--myColor);
}
@mixin c-priceCard__body () {
	padding: $c-priceCard__paddingV $c-priceCard__paddingH ;
	padding-bottom: $c-priceCard__paddingB;


	//Write something good
}
@mixin c-priceCard__icon() {
	height: $c-priceCard__iconSize;

	// filter: invert(1);
}
@mixin c-priceCard__title() {
	margin: 0;
	margin-bottom: map-get($c-priceCard__title-typeScale, 'line');

	font-size: map-get($c-priceCard__title-typeScale, 'fontSize');
	line-height: map-get($c-priceCard__title-typeScale, 'autoLineHeight');
}
@mixin c-priceCard__price() {
	position: relative;

	display: flex;
	align-items: flex-start;
	flex-wrap: wrap;
	justify-content: center;

	padding-top: map-get($c-priceCard__price-typeScale, 'line')/2;

	text-align: center;

	font-size: map-get($c-priceCard__price-typeScale, 'fontSize');
	line-height: 1;
	.c-priceCard__cents {
		padding-top: .4em;

		font-size: .3em;
	}
	small {
		display: block;

		width: 100%;

		text-transform: uppercase;

		font-size: map-get($c-priceCard__features-typeScale, 'fontSize');
	}
	&:before {
		position: absolute;
		top: 0;
		left: -$c-priceCard__paddingH;

		width: calc(100% + #{$c-priceCard__paddingH*2});
		height: calc(100% + #{$c-priceCard__paddingV});

		content: '';
		transition: $c-priceCard__transition;

		background: rgba(#FFFFFF,.2);
	}
}
@mixin c-priceCard__features() {
	margin: map-get($c-priceCard__features-typeScale, 'line') 0;

	list-style: none;
}
@mixin c-priceCard__feature() {
	font-size: map-get($c-priceCard__features-typeScale, 'fontSize');
	line-height: map-get($c-priceCard__features-typeScale, 'autoLineHeight')*1.5;
	&:not(:last-child) {
		border-bottom: 1px solid $c-priceCard__border-color;
	}
}
//-----------------------------------------------------------------
// COLOR VARIANTS
@mixin c-priceCard--gratis () {
	--myColor: #{map-get($c-priceCard__colors,'gratis')};
}
@mixin c-priceCard--basica () {
	--myColor: #{map-get($c-priceCard__colors,'basica')};
}
@mixin c-priceCard--plus () {
	--myColor: #{map-get($c-priceCard__colors,'plus')};
}
@mixin c-priceCard--completa () {
	--myColor: #{map-get($c-priceCard__colors,'completa')};
}
//-----------------------------------------------------------------
// STATE VARIANTS
@mixin  c-priceCard--active() {
	position: relative;

	border-width: 2px;

@include c-card--highlighted ();

	button {
		opacity: 0;
	}
	.c-priceCard__price:before {
		display: none;
	}
}
@mixin c-card--higlighted__after () {
	position: absolute;
	bottom: 0;

	display: block;

	width: 100%;

	content: 'SELECCCIONADA';
	text-align: center;

	color: #FFFFFF;
	background: red;
	background: var(--myColor);
	box-shadow: 0 0 5px rgba(0,0,0,.5);

	font-size: .8em;
	font-weight: bold;
}
// PRICECARD selector output
// --------------------------------------------------
@if ($c-priceCard--enabled) {
	.c-priceList {
		@include c-priceList();
	}
	.c-priceCard {
		@include c-priceCard();
	}

	.c-priceCard__header {
		@include c-priceCard__header();
	}
	.c-priceCard__body {
		@include c-priceCard__body();
	}
	.c-priceCard__icon {
		@include c-priceCard__icon();
	}
	.c-priceCard__title {
		@include c-priceCard__title();
	}
	.c-priceCard__price {
		@include c-priceCard__price();
	}
	.c-priceCard__features {
		@include c-priceCard__features();
	}
	.c-priceCard__feature {
		@include c-priceCard__feature();
	}

	// VARIANTS
	.c-priceCard--gratis {
		@include c-priceCard--gratis();
	}
	.c-priceCard--basica {
		@include c-priceCard--basica();
	}
	.c-priceCard--plus {
		@include c-priceCard--plus();
	}
	.c-priceCard--completa {
		@include c-priceCard--completa();
	}
	// STATES
	.c-priceCard.is-active {
		@include c-priceCard--active();
	}
	.c-priceCard.is-active::after {
		@include c-card--higlighted__after();
	}
}

